# Azure Container Apps deployment configuration
name: health-advisor
resourceGroup: ${RESOURCE_GROUP}
location: ${LOCATION}
type: Microsoft.App/containerApps

properties:
  managedEnvironmentId: ${CONTAINER_APPS_ENVIRONMENT}
  configuration:
    ingress:
      external: true
      targetPort: 8000
    scaling:
      minReplicas: 1
      maxReplicas: 10
      rules:
        - name: http-rule
          http:
            metadata:
              concurrentRequests: "100"
    secrets:
      - name: project-connection-string
        value: ${PROJECT_CONNECTION_STRING}
      - name: database-url
        value: ${DATABASE_URL}
      - name: postgres-password
        value: ${POSTGRES_PASSWORD}
  template:
    containers:
      - name: backend
        image: ${REGISTRY_NAME}/health-advisor-backend:latest
        resources:
          requests:
            cpu: 0.5
            memory: 1Gi
          limits:
            cpu: 2.0
            memory: 2Gi
        probes:
          liveness:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 30
          readiness:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
        env:
          - name: PROJECT_CONNECTION_STRING
            secretRef: project-connection-string
          - name: MODEL_DEPLOYMENT_NAME
            value: gpt-4o-mini
          - name: DATABASE_URL
            secretRef: database-url
          - name: POSTGRES_PASSWORD
            secretRef: postgres-password
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_DB
            value: drugdev
      - name: frontend
        image: ${REGISTRY_NAME}/health-advisor-frontend:latest
        resources:
          requests:
            cpu: 0.5
            memory: 1Gi
          limits:
            cpu: 1.0
            memory: 2Gi
        probes:
          liveness:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 30
          readiness:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
        env:
          - name: NEXT_PUBLIC_API_URL
            value: https://${BACKEND_URL}
